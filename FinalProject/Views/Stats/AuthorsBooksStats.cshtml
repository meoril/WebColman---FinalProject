
@{
    ViewBag.Title = "AuthorsBooksStats";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>AuthorsBooksStats</h2>
<div class="row">
    <div id="chartContainer">
    </div>
</div>
@section scripts{
<script src="https://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script src="http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js"></script>
<script type="text/javascript">
    $(function () {
        var margin = { top: 40, right: 20, bottom: 30, left: 40 },
                    width = 960 - margin.left - margin.right,
                    height = 550 - margin.top - margin.bottom;

        //Building the scale for the heights
        var yScale = d3.scale
                       .linear()
                       .range([height, 0]);

        //Building the scale for the bar locations
        var xScale = d3.scale
                       .ordinal()
                       .rangeRoundBands([0, width], 0.1);

        //Building a Y axis
        var yAxis = d3.svg.axis()
                      .scale(yScale)
                      .orient("left");

        // Building an X Axis
        var xAxis = d3.svg.axis()
                      .scale(xScale)
                      .orient("bottom");

        var tip = d3.tip()
          .attr('class', 'd3-tip')
          .offset([-10, 0])
          .html(function (d) {
              return "<strong>Frequency:</strong> <span style='color:red'>" + d.count + "</span>";
          });


        // Build the overall SVG container
        var svg = d3.select("#chartContainer")
                    .append("svg")
                    .attr("width", width)
                    .attr("height", height)
                    .attr("class", "chart");
        svg.call(tip);

        d3.json("../Stats/GetExtraAuthorsBooksStats", function (error, data) {
            xScale.domain(data.map(function (d) { return d.author; }));
            yScale.domain([0, 15]);
            xAxis.tickFormat(function (d)
            {
                return data[d-1].author;
            });

            svg.append("g")
              .attr("class", "x axis")
              .attr("transform", "translate(0," + height + ")")
              .call(xAxis);

            svg.append("g")
                .attr("class", "y axis")
                .call(yAxis)
                .append("text")
                .attr("transform", "rotate(-90)")
                .attr("y", 6)
                .attr("dy", ".71em")
                .style("text-anchor", "end")
                .text("Books Count");

            svg.selectAll(".bar")
                .data(data)
                .enter().append("rect")
                .attr("class", "bar")
                .attr("x", function (d) { return xScale(d.author); })
                .attr("width", xScale.rangeBand())
                .attr("y", function (d) { return yScale(d.count); })
                .attr("height", function (d) { return height - yScale(d.count); })
                .text("Author")
                .on('mouseover', tip.show)
                .on('mouseout', tip.hide);
        });

    });
</script>
    }